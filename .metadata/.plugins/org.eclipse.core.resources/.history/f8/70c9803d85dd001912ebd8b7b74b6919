package br.com.fiap.rateldev.business;

import java.util.regex.Pattern;

import br.com.fiap.rateldev.beans.Usuario;
import br.com.fiap.rateldev.dao.UsuarioDAO;

public class UsuarioBO {
	public static boolean isValid(String email) 
    { 
        String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\."+ 
                            "[a-zA-Z0-9_+&*-]+)*@" + 
                            "(?:[a-zA-Z0-9-]+\\.)+[a-z" + 
                            "A-Z]{2,7}$"; 
                              
        Pattern padrao = Pattern.compile(emailRegex); 
        if (email == null) 
            return false; 
        return padrao.matcher(email).matches(); 
    } 
	
	public static boolean cadastrar(String nome, String email, String senha, String confirmarSenha) throws Exception  {
		UsuarioDAO udao = new UsuarioDAO();
		
		if (email.equals(""))
			throw new Exception("Email não pode estar em branco");
		
		if (email.length() < 4)
			throw new Exception("Email deve ter no mínimo 7 caracteres");
		
		if (email.length() > 100)
			throw new Exception("Email deve ter no máximo 100 caracteres");
		
		if (!isValid(email))
			throw new Exception("Email inválido");
		
		if (nome.equals(""))
			throw new Exception("Nome não pode estar em branco");
		
		if (nome.length() < 4)
			throw new Exception("Nome deve ter no mínimo 4 caracteres");
		
		if (nome.length() > 100)
			throw new Exception("Nome deve ter no máximo 100 caracteres");
		
		if (senha.equals(""))
			throw new Exception("Senha não pode estar em branco");
		
		if (senha.length() > 100)
			throw new Exception("Senha deve ter no máximo 100 caracteres");
		
		if (confirmarSenha.equals(""))
			throw new Exception("Confirmar senha não pode estar em branco");
		
		if (!senha.equals(confirmarSenha))
			throw new Exception("Senhas não conferem");
		
		if (udao.buscarUsuarioPorEmail(email) != null) {
			throw new Exception("Email já está em uso");
		}
		
		return udao.cadastrar(nome, email, senha);
	}
	
	public static boolean alterar(int id, String nome, String senha, String confirmarSenha) throws Exception {
		UsuarioDAO udao = new UsuarioDAO();
		
		if (nome.equals(""))
			throw new Exception("Nome não pode estar em branco");
		
		if (nome.length() > 100)
			throw new Exception("Nome deve ter no máximo 100 caracteres");
		
		if (senha.equals(""))
			throw new Exception("Senha não pode estar em branco");
		
		if (senha.length() > 100)
			throw new Exception("Senha deve ter no máximo 100 caracteres");
		
		if (confirmarSenha.equals(""))
			throw new Exception("Confirmar senha não pode estar em branco");
		
		if (!senha.equals(confirmarSenha))
			throw new Exception("Senhas não conferem");
		
		return udao.alterar(id, nome, senha);
	}
	
	public static Usuario login(String email, String senha) throws Exception {
		UsuarioDAO udao = new UsuarioDAO();
		
		if (email.equals(""))
			throw new Exception("Email não pode estar em branco");
		
		if (email.length() > 100)
			throw new Exception("Emails têm no máximo 100 caracteres");
		
		if (senha.equals(""))
			throw new Exception("Senha não pode estar em branco");
		
		if (senha.length() > 100)
			throw new Exception("Senhas têm no máximo 100 caracteres");
		
		return udao.login(senha, senha);
	}
}
